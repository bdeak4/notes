#!/bin/sh

set -ex

cd -P -- "$(dirname -- $(realpath "$0"))"

if [ -n "$1" ]; then
	if [ "$1" = "sync" ]; then
		git stash
		git pull -r
		git diff --cached origin/main
		y=$(dd bs=1 count=1 2>/dev/null)
		if [ $y = "y" ]; then
			git push -u origin main
		fi
		git stash pop
		exit 0
	fi

	tmpfile=$(mktemp /tmp/notes.XXXXXX.md)
	vim $tmpfile
	newtitle=$(head -1 $tmpfile | sed 's/^# //')
	newfilename=$(echo "$newtitle" | iconv -c -t ascii//TRANSLIT | sed -E 's/[~^]+//g' | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+|-+$//g' | tr A-Z a-z)
	if [ -z "$newfilename" ]; then
		echo oops
		exit 1
	fi
	mkdir -p $1
	newfile="$1/$newfilename.md"
	mv $tmpfile $newfile
	git add $newfile
	git commit -m "add $newfile"
	exit 0
fi

file=$(fzf --layout=reverse --preview "cat {}")
oldtitle=$(head -1 $file | sed 's/^# //')
vim $file
newtitle=$(head -1 $file | sed 's/^# //')

if [ "$oldtitle" != "$newtitle" ]; then
	newfilename=$(echo "$newtitle" | iconv -c -t ascii//TRANSLIT | sed -E 's/[~^]+//g' | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+|-+$//g' | tr A-Z a-z)
	newfile="$(dirname $file)/$newfilename.md"
	mv $file $newfile
	git add $file $newfile
	git commit -m "edit $newfile"
fi

if [ -n "$(git diff --name-only -- $file)" ]; then
	git add $file
	git commit -m "edit $file"
fi
